// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// RateLimitValueSourceApplyConfiguration represents a declarative configuration of the RateLimitValueSource type for use
// with apply.
type RateLimitValueSourceApplyConfiguration struct {
	Header        *string `json:"header,omitempty"`
	RemoteAddress *bool   `json:"remoteAddress,omitempty"`
	Path          *bool   `json:"path,omitempty"`
}

// RateLimitValueSourceApplyConfiguration constructs a declarative configuration of the RateLimitValueSource type for use with
// apply.
func RateLimitValueSource() *RateLimitValueSourceApplyConfiguration {
	return &RateLimitValueSourceApplyConfiguration{}
}

// WithHeader sets the Header field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Header field is set to the value of the last call.
func (b *RateLimitValueSourceApplyConfiguration) WithHeader(value string) *RateLimitValueSourceApplyConfiguration {
	b.Header = &value
	return b
}

// WithRemoteAddress sets the RemoteAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RemoteAddress field is set to the value of the last call.
func (b *RateLimitValueSourceApplyConfiguration) WithRemoteAddress(value bool) *RateLimitValueSourceApplyConfiguration {
	b.RemoteAddress = &value
	return b
}

// WithPath sets the Path field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Path field is set to the value of the last call.
func (b *RateLimitValueSourceApplyConfiguration) WithPath(value bool) *RateLimitValueSourceApplyConfiguration {
	b.Path = &value
	return b
}
