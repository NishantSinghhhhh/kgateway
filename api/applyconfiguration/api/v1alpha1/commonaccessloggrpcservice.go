// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1 "sigs.k8s.io/gateway-api/apis/v1"
)

// CommonAccessLogGrpcServiceApplyConfiguration represents a declarative configuration of the CommonAccessLogGrpcService type for use
// with apply.
type CommonAccessLogGrpcServiceApplyConfiguration struct {
	CommonGrpcServiceApplyConfiguration `json:",inline"`
	LogName                             *string `json:"logName,omitempty"`
}

// CommonAccessLogGrpcServiceApplyConfiguration constructs a declarative configuration of the CommonAccessLogGrpcService type for use with
// apply.
func CommonAccessLogGrpcService() *CommonAccessLogGrpcServiceApplyConfiguration {
	return &CommonAccessLogGrpcServiceApplyConfiguration{}
}

// WithBackendRef sets the BackendRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackendRef field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithBackendRef(value v1.BackendRef) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.BackendRef = &value
	return b
}

// WithAuthority sets the Authority field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Authority field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithAuthority(value string) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.Authority = &value
	return b
}

// WithMaxReceiveMessageLength sets the MaxReceiveMessageLength field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxReceiveMessageLength field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithMaxReceiveMessageLength(value int32) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.MaxReceiveMessageLength = &value
	return b
}

// WithSkipEnvoyHeaders sets the SkipEnvoyHeaders field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SkipEnvoyHeaders field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithSkipEnvoyHeaders(value bool) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.SkipEnvoyHeaders = &value
	return b
}

// WithTimeout sets the Timeout field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Timeout field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithTimeout(value metav1.Duration) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.Timeout = &value
	return b
}

// WithInitialMetadata adds the given value to the InitialMetadata field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the InitialMetadata field.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithInitialMetadata(values ...*HeaderValueApplyConfiguration) *CommonAccessLogGrpcServiceApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithInitialMetadata")
		}
		b.CommonGrpcServiceApplyConfiguration.InitialMetadata = append(b.CommonGrpcServiceApplyConfiguration.InitialMetadata, *values[i])
	}
	return b
}

// WithRetryPolicy sets the RetryPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetryPolicy field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithRetryPolicy(value *RetryPolicyApplyConfiguration) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.CommonGrpcServiceApplyConfiguration.RetryPolicy = value
	return b
}

// WithLogName sets the LogName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LogName field is set to the value of the last call.
func (b *CommonAccessLogGrpcServiceApplyConfiguration) WithLogName(value string) *CommonAccessLogGrpcServiceApplyConfiguration {
	b.LogName = &value
	return b
}
