// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MetadataNamespacesApplyConfiguration represents a declarative configuration of the MetadataNamespaces type for use
// with apply.
type MetadataNamespacesApplyConfiguration struct {
	Typed   []string `json:"typed,omitempty"`
	Untyped []string `json:"untyped,omitempty"`
}

// MetadataNamespacesApplyConfiguration constructs a declarative configuration of the MetadataNamespaces type for use with
// apply.
func MetadataNamespaces() *MetadataNamespacesApplyConfiguration {
	return &MetadataNamespacesApplyConfiguration{}
}

// WithTyped adds the given value to the Typed field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Typed field.
func (b *MetadataNamespacesApplyConfiguration) WithTyped(values ...string) *MetadataNamespacesApplyConfiguration {
	for i := range values {
		b.Typed = append(b.Typed, values[i])
	}
	return b
}

// WithUntyped adds the given value to the Untyped field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Untyped field.
func (b *MetadataNamespacesApplyConfiguration) WithUntyped(values ...string) *MetadataNamespacesApplyConfiguration {
	for i := range values {
		b.Untyped = append(b.Untyped, values[i])
	}
	return b
}
