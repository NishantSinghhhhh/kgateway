// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// McpSelectorApplyConfiguration represents a declarative configuration of the McpSelector type for use
// with apply.
type McpSelectorApplyConfiguration struct {
	Namespace *v1.LabelSelectorApplyConfiguration `json:"namespace,omitempty"`
	Service   *v1.LabelSelectorApplyConfiguration `json:"service,omitempty"`
}

// McpSelectorApplyConfiguration constructs a declarative configuration of the McpSelector type for use with
// apply.
func McpSelector() *McpSelectorApplyConfiguration {
	return &McpSelectorApplyConfiguration{}
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *McpSelectorApplyConfiguration) WithNamespace(value *v1.LabelSelectorApplyConfiguration) *McpSelectorApplyConfiguration {
	b.Namespace = value
	return b
}

// WithService sets the Service field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Service field is set to the value of the last call.
func (b *McpSelectorApplyConfiguration) WithService(value *v1.LabelSelectorApplyConfiguration) *McpSelectorApplyConfiguration {
	b.Service = value
	return b
}
