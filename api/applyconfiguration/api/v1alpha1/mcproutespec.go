// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "sigs.k8s.io/gateway-api/apis/v1"
)

// MCPRouteSpecApplyConfiguration represents a declarative configuration of the MCPRouteSpec type for use
// with apply.
type MCPRouteSpecApplyConfiguration struct {
	ParentRefs []v1.ParentReference `json:"parentRefs,omitempty"`
	BackendRef *v1.BackendRef       `json:"backendRef,omitempty"`
}

// MCPRouteSpecApplyConfiguration constructs a declarative configuration of the MCPRouteSpec type for use with
// apply.
func MCPRouteSpec() *MCPRouteSpecApplyConfiguration {
	return &MCPRouteSpecApplyConfiguration{}
}

// WithParentRefs adds the given value to the ParentRefs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ParentRefs field.
func (b *MCPRouteSpecApplyConfiguration) WithParentRefs(values ...v1.ParentReference) *MCPRouteSpecApplyConfiguration {
	for i := range values {
		b.ParentRefs = append(b.ParentRefs, values[i])
	}
	return b
}

// WithBackendRef sets the BackendRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the BackendRef field is set to the value of the last call.
func (b *MCPRouteSpecApplyConfiguration) WithBackendRef(value v1.BackendRef) *MCPRouteSpecApplyConfiguration {
	b.BackendRef = &value
	return b
}
