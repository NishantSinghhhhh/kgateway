// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MCPAuthPolicyRuleApplyConfiguration represents a declarative configuration of the MCPAuthPolicyRule type for use
// with apply.
type MCPAuthPolicyRuleApplyConfiguration struct {
	Matches  []MCPAuthPolicyMatchApplyConfiguration `json:"matches,omitempty"`
	Resource *MCPResourceApplyConfiguration         `json:"resource,omitempty"`
}

// MCPAuthPolicyRuleApplyConfiguration constructs a declarative configuration of the MCPAuthPolicyRule type for use with
// apply.
func MCPAuthPolicyRule() *MCPAuthPolicyRuleApplyConfiguration {
	return &MCPAuthPolicyRuleApplyConfiguration{}
}

// WithMatches adds the given value to the Matches field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Matches field.
func (b *MCPAuthPolicyRuleApplyConfiguration) WithMatches(values ...*MCPAuthPolicyMatchApplyConfiguration) *MCPAuthPolicyRuleApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithMatches")
		}
		b.Matches = append(b.Matches, *values[i])
	}
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *MCPAuthPolicyRuleApplyConfiguration) WithResource(value *MCPResourceApplyConfiguration) *MCPAuthPolicyRuleApplyConfiguration {
	b.Resource = value
	return b
}
