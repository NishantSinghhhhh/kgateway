// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "sigs.k8s.io/gateway-api/apis/v1"
)

// McpTargetSelectorApplyConfiguration represents a declarative configuration of the McpTargetSelector type for use
// with apply.
type McpTargetSelectorApplyConfiguration struct {
	Name     *v1.SectionName                `json:"name,omitempty"`
	Selector *McpSelectorApplyConfiguration `json:"selector,omitempty"`
	Static   *McpTargetApplyConfiguration   `json:"static,omitempty"`
}

// McpTargetSelectorApplyConfiguration constructs a declarative configuration of the McpTargetSelector type for use with
// apply.
func McpTargetSelector() *McpTargetSelectorApplyConfiguration {
	return &McpTargetSelectorApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *McpTargetSelectorApplyConfiguration) WithName(value v1.SectionName) *McpTargetSelectorApplyConfiguration {
	b.Name = &value
	return b
}

// WithSelector sets the Selector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Selector field is set to the value of the last call.
func (b *McpTargetSelectorApplyConfiguration) WithSelector(value *McpSelectorApplyConfiguration) *McpTargetSelectorApplyConfiguration {
	b.Selector = value
	return b
}

// WithStatic sets the Static field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Static field is set to the value of the last call.
func (b *McpTargetSelectorApplyConfiguration) WithStatic(value *McpTargetApplyConfiguration) *McpTargetSelectorApplyConfiguration {
	b.Static = value
	return b
}
